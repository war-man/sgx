@using Common.Utilities;
@using ViewModels;
@model ThangBangLuongViewModel
@{
    Layout = "~/Views/Shared/_LayoutSocialFb.cshtml";
    var login = User.Identity.Name;
}

<div class="card">
    <div class="card-body">
        <a asp-action="Create"><i class="icon-add-to-list mr-1"></i> Tạo thang lương vị trí mới</a>
    </div>
</div>

<div class="card card-sm">
    <div class="export-area">
        <a class="ce ko" href="/@Constants.LinkSalary.Main/@Constants.LinkSalary.ThangBangLuong/@Constants.LinkSalary.Export" data-toggle="tooltip" title="Xuất ra tài liệu file excel.">
            <i class="fas fa-download"></i> Xuất excel
        </a>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <b>I/ MỨC LƯƠNG TỐI THIỂU VÙNG:</b> <b>@String.Format("{0:#,###,###}", Model.SalaryMucLuongVung.ToiThieuVungQuiDinh)</b> đồng/tháng
    </div>
    <div class="col-12">
        Mức lương tối thiểu mà doanh nghiệp đang áp dụng: <b>@String.Format("{0:#,###,###}", Model.SalaryMucLuongVung.ToiThieuVungDoanhNghiepApDung)</b> đồng/tháng
    </div>
</div>
<div class="row">
    <div class="col-12">
        <b>
            II/ HỆ THỐNG THANG LƯƠNG:
        </b>
        (ĐVT:  đồng)
    </div>


    @{
        var typeRoles = (from p in Model.SalaryThangBangLuongs
                         group p by new
                         {
                             p.TypeRole
                         }
                        into d
                         select new
                         {
                             TypeRole = d.Key.TypeRole,
                             Salaries = d.ToList(),
                         }).ToList();
        var i = 1;
        foreach (var typeRole in typeRoles)
        {
            <div class="col-12">
                <b>@i-@typeRole</b>
            </div>
            <div class="col-12 table-responsive">
                <table class="table table-sm table-bordered table-striped table-hover">

                    @{
                        var groupBacLuong = (from s in typeRole.Salaries
                                             group s by new
                                             {
                                                 s.Name,
                                                 s.MaSo
                                             }
                        into l
                                             select new
                                             {
                                                 Name = l.Key.Name,
                                                 MaSo = l.Key.MaSo,
                                                 CountLevel = l.Count(),
                                                 Levels = l.ToList(),
                                             }).ToList();

                        var levelMax = groupBacLuong.OrderByDescending(m => m.CountLevel).First().CountLevel;
                    }
                    <thead>
                        <tr>
                            <th>CHỨC DANH CÔNG VIỆC</th>
                            <th>MÃ SỐ</th>
                            <th colspan="@levelMax">BẬC/ HỆ SỐ/ MỨC LƯƠNG</th>
                        </tr>
                        <tr>
                            <th></th>
                            <th></th>
                            @for (var level = 1; i <= levelMax; level++)
                            {
                                <th>@level</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var bacLuong in groupBacLuong)
                            {
                                int miss = 0;
                                if (levelMax > bacLuong.CountLevel)
                                {
                                    miss = levelMax - bacLuong.CountLevel;
                                }

                        <tr>
                            <td>
                                @bacLuong.Name
                            </td>
                            <td></td>
                            @for (var level = 1; i <= levelMax; level++)
                            {
                                <td></td>
                            }
                        </tr>
                        <tr>
                            <td>
                                Hệ số
                            </td>
                            <td></td>
                            @{
                                foreach (var heso in bacLuong.Levels)
                                {
                                    <td>@heso.HeSo</td>
                                }
                                if (miss > 0)
                                {
                                    for (var x = 1; x <= miss; x++)
                                    {
                                        <td></td>
                                    }
                                }
                            }
                        </tr>
                        <tr>
                            <td>
                                Mức lương tháng
                            </td>
                            <td>@bacLuong.MaSo</td>
                            @{
                                foreach (var heso in bacLuong.Levels)
                                {
                                    <td>@heso.MucLuong</td>
                                }
                                if (miss > 0)
                                {
                                    for (var x = 1; x <= miss; x++)
                                    {
                                        <td></td>
                                    }
                                }
                            }
                        </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            i++;
        }
    }

</div>

@section scripts {
    <script type="text/javascript" src="~/js/thang-bang-luong.js?@DateTime.Now.Ticks"></script>
}



