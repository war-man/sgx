@using System;
@using Common.Utilities;
@using Common.Enums;
@using System.Globalization;
@using ViewModels
@model TimeKeeperViewModel

@{
    ViewData["title"] = "CÔNG | CÔNG TY TNHH CNSH SÀI GÒN XANH";
    var currentcrumb = "Công";
    var approvecheck = string.Empty;
    if (!Model.IsMe)
    {
        currentcrumb = "Công " + Model.Employee.FullName;
        approvecheck = "d-none";
    }
    var lastUpdated = DateTime.Now.ToString("dd/MM/yyyy");
    double dayworking = ViewBag.DayWorking;
    double workday = ViewBag.DayWorking;
    double nghiphep = 0;
    double nghihuongluong = 0;
    double nghikhongluong = 0;
    double thoigianthieu = 0;
    double tangcangaythuong = 0;
    double tangcachunhat = 0;
    double tangcale = 0;
    int month = DateTime.Now.Month;
    int year = DateTime.Now.Year;
    if (!string.IsNullOrEmpty(Model.Thang))
    {
        month = Convert.ToInt32(Model.Thang.Split("-")[0]);
        year = Convert.ToInt32(Model.Thang.Split("-")[1]);
    }
    if (Model.EmployeeWorkTimeMonthLogs != null && Model.EmployeeWorkTimeMonthLogs.Count > 0)
    {
        lastUpdated = Model.EmployeeWorkTimeMonthLogs[0].LastUpdated.ToString("dd/MM/yyyy");
        workday = 0;
        var timesinmonth = Model.EmployeeWorkTimeMonthLogs.Where(m => m.Month.Equals(month) && m.Year.Equals(year)).ToList();
        foreach (var item in timesinmonth)
        {
            workday += item.Workday;
            thoigianthieu += TimeSpan.FromMilliseconds(item.Late + item.Early).TotalMinutes;
            tangcangaythuong += item.CongTangCaNgayThuongGio;
            tangcachunhat += item.CongCNGio;
            tangcale += item.CongLeTet;
            nghiphep += item.NghiPhepNam;
            nghihuongluong += item.NghiHuongLuong;
            nghikhongluong += item.NghiBenh;
            nghikhongluong += item.NghiKhongPhep;
            nghikhongluong += item.NghiViecRieng;
        }
    }

    var employee = Model.Employee;
}

<div class="main-container">
    <nav aria-label="breadcrumb" role="navigation" class="bg-primary text-white">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Trang chủ</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Index">Công</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                            @currentcrumb
                        </li>
                    </ol>
                </div>
            </div>
        </div>
    </nav>

    <section class="space-sm">
        <div class="container">
            <div class="row">
                <div class="col-12 col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <span>Tổng quan (dữ liệu tính tới ngày @lastUpdated)</span>
                            <ul class="list-group list-group-flush">
                                @if (employee.IsTimeKeeper)
                                {
                                    if (employee.Workplaces != null)
                                    {

                                        @foreach (var workplace in employee.Workplaces)
                                        {
                                            @if (!string.IsNullOrEmpty(workplace.Fingerprint))
                                            {
                                                <li class="list-group-item">
                                                    <div class="d-flex justify-content-between">
                                                        <div><i class="fas fa-fingerprint"></i> Mã chấm công | TG. làm việc: <span class="badge badge-primary text-uppercase">@workplace.Code</span></div>
                                                        <span class="badge badge-light">@workplace.Fingerprint | @workplace.WorkingScheduleTime</span>
                                                    </div>
                                                </li>
                                            }
                                        }
                                    }
                                }
                                <li class="list-group-item">
                                    <div class="d-flex justify-content-between">
                                        <div><i class="icon-calculator mr-1"></i> Số ngày làm việc: (@Model.StartWorkingDate.ToString("dd/MM/yyyy") - @Model.EndWorkingDate.ToString("dd/MM/yyyy"))</div>
                                        <span class="badge badge-light">@dayworking</span>
                                    </div>
                                </li>
                                <li class="list-group-item">
                                    <div class="d-flex justify-content-between">
                                        <div><i class="icon-calculator mr-1"></i> Chấm công: (ngày)</div>
                                        <span class="badge badge-light">@workday</span>
                                    </div>
                                </li>
                                @if (nghiphep > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Nghỉ phép: (ngày)</div>
                                            <span class="badge badge-light">
                                                @Math.Round(nghiphep, 2)
                                            </span>
                                        </div>
                                    </li>
                                }
                                @if (nghihuongluong > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Nghỉ hưởng lương: (ngày)</div>
                                            <span class="badge badge-light">
                                                @Math.Round(nghihuongluong, 2)
                                            </span>
                                        </div>
                                    </li>
                                }
                                @if (nghikhongluong > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Nghỉ không hưởng lương: (ngày)</div>
                                            <span class="badge badge-light">
                                                @Math.Round(nghikhongluong, 2)
                                            </span>
                                        </div>
                                    </li>
                                }

                                @if (tangcangaythuong > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Giờ tăng ca ngày thường</div>
                                            <span class="badge badge-light">
                                                @Math.Round(tangcangaythuong, 2)
                                            </span>
                                        </div>
                                    </li>
                                }
                                @if (tangcachunhat > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Giờ tăng ca chủ nhật</div>
                                            <span class="badge badge-light">
                                                @Math.Round(tangcachunhat, 2)
                                            </span>
                                        </div>
                                    </li>
                                }
                                @if (tangcale > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Giờ tăng ca lễ tết</div>
                                            <span class="badge badge-light">
                                                @Math.Round(tangcale, 2)
                                            </span>
                                        </div>
                                    </li>
                                }
                                @if (thoigianthieu > 0)
                                {
                                    <li class="list-group-item">
                                        <div class="d-flex justify-content-between">
                                            <div><i class="icon-calculator mr-1"></i> Thời gian thiếu: (phút)</div>
                                            <span class="badge badge-light">@String.Format("{0:#,###,###}", thoigianthieu)</span>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    @if (Model.RightRequest)
                    {
                        <form method="get" action="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Index" id="form-main">
                            <div class="form-group">
                                <label class="col-form-label">Nhân viên</label>
                                <select asp-for="Id" class="form-control form-control-lg js-select2-basic-single ddl-employees">
                                    <option value="">Chọn</option>
                                    @foreach (var item in Model.Employees)
                                    {
                                        string displayTitle = string.Empty;
                                        if (!string.IsNullOrEmpty(item.Email))
                                        {
                                            displayTitle += "- " + item.Email + "";
                                        }
                                        <option value="@item.Id">@item.FullName @displayTitle</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-1 col-form-label">Tháng</label>
                                <select asp-for="Thang" class="form-control form-control-lg js-select2-basic-single ddl-times">
                                    @foreach (var item in Model.MonthYears)
                                    {
                                        <option value="@item.Month-@item.Year">@item.Month/@item.Year</option>
                                    }
                                </select>
                            </div>
                        </form>
                    }

                    @if (Model.RightManager)
                    {
                        <div class="row mb-2">
                            <div class="col-12">
                                <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Timer" class="btn btn-block btn-lg btn-outline-info" data-toggle="tooltip" title="Bấm vô xác nhận công cho nhân viên khác.">
                                    <i class="fas fa-calculator"></i> BẢNG CÔNG
                                </a>
                            </div>
                        </div>
                    }

                    @if (Model.Approver)
                    {
                        <div class="row mb-2">
                            <div class="col-12">
                                <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Approvement" class="btn btn-block btn-outline-info" data-toggle="tooltip" title="Quản lý phép của nhân viên và lịch sử duyệt phép.">
                                    <i class="fas fa-chalkboard-teacher"></i> DUYỆT CÔNG
                                </a>
                            </div>
                        </div>
                    }

                    <div class="row mb-2">
                        <div class="col-12">
                            <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Overtime" class="btn btn-block btn-lg btn-outline-info"><i class="fas fa-user-clock"></i> TĂNG CA</a>
                        </div>
                    </div>

                    @if (Model.IsManager)
                    {
                        <div class="row mb-2">
                            <div class="col-12">
                                <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.OvertimeEmployee" class="btn btn-block btn-lg btn-outline-info" data-toggle="tooltip" title="Tăng ca cho nhân viên.">
                                    <i class="fas fa-user-clock"></i> TĂNG CA NHÂN VIÊN
                                </a>
                            </div>
                        </div>
                    }

                    @if (Model.IsSecurity)
                    {
                        <div class="row mb-2">
                            <div class="col-12">
                                <a href="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Overtime/@Constants.LinkTimeKeeper.Security" class="btn btn-block btn-lg btn-outline-info" data-toggle="tooltip" title="Tăng ca cho nhân viên.">
                                    <i class="fas fa-user-clock"></i> KIỂM SOÁT TĂNG CA
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="card card-sm">
                <div class="card-header bg-secondary d-flex justify-content-between align-items-center">
                    <div>
                        <h6>Lịch sử chấm công</h6>
                    </div>
                    @if (Model.IsMe)
                    {
                        <form class="d-flex align-items-center" method="get" action="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Index" id="form-main">
                            <span class="mr-2 text-muted text-small text-nowrap">Tháng:</span>
                            <select asp-for="Thang" class="custom-select ddl-times">
                                @foreach (var item in Model.MonthYears)
                                {
                                    <option value="@item.Month-@item.Year">@item.Month/@item.Year</option>
                                }
                            </select>
                        </form>
                    }
                </div>
            </div>

            @if (Model.EmployeeWorkTimeLogs.Count > 0)
            {
                <div class="row">
                    <div class="col-12 table-responsive">
                        <table class="table table-sm table-striped">
                            <thead>
                                <tr>
                                    <th scope="col" rowspan="2"></th>
                                    <th scope="col" rowspan="2">#</th>
                                    <th scope="col" rowspan="2">Ngày</th>
                                    <th scope="col" rowspan="2">Vào</th>
                                    <th scope="col" rowspan="2">Ra</th>
                                    <th scope="col" rowspan="2">Chi tiết</th>
                                    <th scope="col" rowspan="2">Ca</th>
                                    <th scope="col" rowspan="2">Công (ngày)</th>
                                    <th scope="col" rowspan="2">Thiếu (phút)</th>
                                    <th scope="col" colspan="2" style="text-align:center">Tăng ca</th>
                                </tr>
                                <tr>
                                    <th nowrap>Thực tế <br /><small>(chờ xác nhận)</small></th>
                                    <th nowrap>Đã xác nhận</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var today = DateTime.Now.Date;
                                    var currentMonth = today.Day > 25 ? today.AddMonths(1).Month : today.Month;
                                    var endDateRequest = new DateTime(today.Year, today.Month, 28);
                                    var i = 1;
                                    foreach (var log in Model.EmployeeWorkTimeLogs)
                                    {
                                        bool isCalHour = false;
                                        bool isToday = false;
                                        if (log.Mode >= (int)ETimeWork.Sunday)
                                        {
                                            isCalHour = true;
                                        }
                                        if (log.Date == today)
                                        {
                                            isToday = true;
                                        }
                                        <tr>
                                            <td class="log-@log.Id">
                                                @if (isToday)
                                                {
                                                    <span class="badge badge-light">Chờ dữ liệu</span>
                                                }
                                                else
                                                {
                                                    if (log.Mode == (int)ETimeWork.Normal)
                                                    {
                                                        if (log.Status == (int)EStatusWork.XacNhanCong)
                                                        {
                                                            if (log.Month == currentMonth || today <= endDateRequest)
                                                            {
                                                                <input type="button" class="btn btn-sm btn-danger" value="Xác nhận công" data-toggle="modal" data-target="#requestTimeKeeperModal" data-id="@log.Id" />
                                                            }
                                                            else
                                                            {
                                                                var displayStatus = string.Empty;
                                                                if (Math.Round(log.Late.TotalMinutes, 0) > 0)
                                                                {
                                                                    displayStatus += string.IsNullOrEmpty(displayStatus) ? "" : " - ";
                                                                    displayStatus += "Trễ";
                                                                }
                                                                if (Math.Round(log.Early.TotalMinutes, 0) > 0)
                                                                {
                                                                    displayStatus += string.IsNullOrEmpty(displayStatus) ? "" : " - ";
                                                                    displayStatus += "Sớm";
                                                                }
                                                                if (!log.In.HasValue && !log.Out.HasValue)
                                                                {
                                                                    displayStatus += string.IsNullOrEmpty(displayStatus) ? "" : " - ";
                                                                    displayStatus += "Thiếu";
                                                                }
                                                                else if (!log.In.HasValue)
                                                                {
                                                                    displayStatus += string.IsNullOrEmpty(displayStatus) ? "" : " - ";
                                                                    displayStatus += "Thiếu vào";
                                                                }
                                                                else if (!log.Out.HasValue)
                                                                {
                                                                    displayStatus += string.IsNullOrEmpty(displayStatus) ? "" : " - ";
                                                                    displayStatus += "Thiếu ra";
                                                                }
                                                                <small class="badge badge-secondary">@displayStatus</small>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            var statusBag = log.Status == (int)EStatusWork.TuChoi ? "badge-pill" : "badge-info";
                                                            <span class="badge @statusBag">@Constants.TimeKeeper(log.Status)</span>
                                                            if (!string.IsNullOrEmpty(log.Reason))
                                                            {
                                                                var displayReason = log.Reason;
                                                                if (!string.IsNullOrEmpty(log.ReasonDetail))
                                                                {
                                                                    displayReason += ". Chi tiết: " + log.ReasonDetail;
                                                                }
                                                                <p><small class="badge badge-light reason-info-text" data-toggle="tooltip" title="@displayReason">Lý do</small></p>
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-info">@Constants.WorkTimeMode(log.Mode)</span>
                                                    }
                                                }
                                            </td>
                                            <td>@i</td>
                                            <td scope="row">
                                                <span class="text-muted">@log.Date.ToString("dd/MM/yyyy")</span>
                                            </td>
                                            <td>
                                                @{
                                                    var vao = string.Empty;
                                                    if (log.In.HasValue)
                                                    {
                                                        vao = log.In.Value.ToString(@"hh\:mm");
                                                    }
                                                }
                                                <span>@vao</span>
                                            </td>
                                            <td>
                                                @{
                                                    var ra = string.Empty;
                                                    if (log.Out.HasValue)
                                                    {
                                                        ra = log.Out.Value.ToString(@"hh\:mm");
                                                    }
                                                    <span>@ra</span>
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    if (log.Logs != null && log.Logs.Count > 0)
                                                    {
                                                        foreach (var logtime in log.Logs)
                                                        {
                                                            <small>@logtime.Date.ToString("HH:mm:ss")</small>
                                                            <br />
                                                        }
                                                        <small class="badge badge-light">@log.WorkplaceCode</small>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (!isCalHour)
                                                {
                                                    var detail = string.Empty;
                                                    if (log.Start.TotalMilliseconds != 0)
                                                    {
                                                        detail += log.Start.ToString(@"hh\:mm");
                                                    }
                                                    if (log.End.TotalMilliseconds != 0)
                                                    {
                                                        detail += "-" + log.End.ToString(@"hh\:mm");
                                                    }
                                                    <small>@detail</small>
                                                }
                                            </td>
                                            <td>
                                                @if (!isToday)
                                                {
                                                    if (isCalHour)
                                                    {
                                                        <small>@log.Reason</small>
                                                    }
                                                    else
                                                    {
                                                        if (log.Status == (int)EStatusWork.DongY)
                                                        {
                                                            <span>1</span>
                                                        }
                                                        else
                                                        {
                                                            <span>@log.WorkDay</span>
                                                        }
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (!isCalHour && !isToday)
                                                {
                                                    if ((log.Status == (int)EStatusWork.XacNhanCong || log.Status == (int)EStatusWork.DaGuiXacNhan || log.Status == (int)EStatusWork.TuChoi))
                                                    {
                                                        var miss = (log.Early + log.Late).TotalMinutes;
                                                        if (miss > 0)
                                                        {
                                                            <span>@Math.Round(miss, 0)</span>
                                                        }
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (!isToday)
                                                {
                                                    var tangcathucte = string.Empty;
                                                    if (log.TangCaThucTe.TotalHours >= 0.5)
                                                    {
                                                        tangcathucte = log.TangCaThucTe.ToString(@"hh\:mm");
                                                    }
                                                    <span>@tangcathucte</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!isToday)
                                                {
                                                    var giotangcaxacnhan = string.Empty;
                                                    if (log.TangCaDaXacNhan.TotalHours > 0)
                                                    {
                                                        giotangcaxacnhan = log.TangCaDaXacNhan.ToString(@"hh\:mm");
                                                    }
                                                    <span>@giotangcaxacnhan</span>
                                                }
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <i class="far fa-clock"></i>
                        <span>
                            Không có dữ liệu hoặc bạn thuộc danh sách không chấm công.
                        </span>
                    </div>
                </div>
            }

            <br />
            <div class="alert alert-warning" role="alert">
                <small>Anh chị chú ý điều khoản bên dưới !</small>
            </div>
            <small>Thiếu thời gian làm việc và không xác nhận công của quản lý, áp dụng cách tính:</small>
            <small> * Quá thời gian làm việc qui định <code>15 phút</code> không tính công buổi làm việc <code>(tương đương 0.5 ngày)</code>.</small>
            <small> * Thời gian thiếu được cộng dồn làm cơ sở xét thưởng, nâng lương cuối năm.</small>
            <br />
            <small>Vui lòng xác nhận công trong tháng hiện tại.</small>
            <br />
            <small>Chúc ngày làm việc hiệu quả.</small>
        </div>
    </section>
</div>

<script id="tmplDataItem" type="text/x-jsrender">
    <input type="hidden" class="hidLogId" name="EmployeeWorkTimeLog.Id" value="{{:id}}" />
    <input type="hidden" name="EmployeeWorkTimeLog.EmployeeId" value="@Model.Id" />
    <div class="from-group">
        <label class="control-label">Thông tin xác nhận công</label>
    </div>
    <div class="row">
        <div class="col-12">
            Ngày <span class="badge badge-info">{{:date}}</span>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            Vào: <span class="badge badge-info">{{:in}}</span>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            Trễ: <span class="badge badge-info">{{:late}}</span>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            Ra: <span class="badge badge-info">{{:out}}</span>
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            Sớm: <span class="badge badge-info">{{:early}}</span>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">Lý do</label>
        <select class="form-control xac-nhan-cong-reason" name="EmployeeWorkTimeLog.Reason">
            <option value="">Chọn</option>
            <option value="Đi công tác">Đi công tác</option>
            <option value="Quên chấm công">Quên chấm công</option>
            <option value="Lý do khác">Lý do khác</option>
        </select>
    </div>
    <div class="alert alert-info reason-description-3 d-none">
        <label class="control-label">Lý do khác bao gồm: kẹt xe, thiên tai, tai nạn,...</label>
    </div>
    <div class="alert alert-danger reason-result-2 d-none">
        <label class="control-label">Bạn thông cảm, theo qui định với lý do "Quên chấm công" trong 01 tháng chỉ được gửi xác nhận 01 lần.</label>
        <p>Lần gửi xác nhận quên chấm công trong tháng:</p>
        <p class="reason-detail-2-cancel"></p>
    </div>
    <div class="alert alert-danger reason-result-3 d-none">
        <label class="control-label">Bạn thông cảm, theo qui định với lý do "Lý do khác" trong 01 tháng chỉ được gửi xác nhận 05 lần.</label>
        <p>Lần gửi xác nhận "Lý do khác" trong tháng:</p>
        <div class="reason-detail-3-cancel"></div>
    </div>
    <div class="form-group reason-detail d-none">
        <label class="control-label">Chi tiết</label>
        <textarea name="EmployeeWorkTimeLog.ReasonDetail" class="form-control js-auto-size">{{:reasonDetail}}</textarea>
    </div>

    <div class="form-group approve-item @approvecheck">
        <label class="control-label">Người xác nhận</label>
        <select name="EmployeeWorkTimeLog.ConfirmId" class="form-control ddl-approve-xac-nhan-cong">
            <option value="">Chọn</option>
        </select>
    </div>
</script>

<div class="modal fade" id="requestTimeKeeperModal" tabindex="-1" role="dialog" aria-labelledby="requestTimeKeeperModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editItemModalLabel">Xác nhận công</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="data-form" method="post" action="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Request" enctype="multipart/form-data">
                <input type="hidden" id="hidUrlGetItem" value="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.Item" />
                <input type="hidden" id="hidReasonRule" value="/@Constants.LinkTimeKeeper.Main/@Constants.LinkTimeKeeper.ReasonRule" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <span class="result"></span>
                <div class="modal-body data-item-edit">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-times"></i>Hủy và đóng</button>
                    <button type="submit" class="btn btn-primary width140 btn-submit-timekeeping" disabled><i class="icon-save"></i>&nbsp;Gửi</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script type="text/javascript" src="~/js/timer/timekeeper.js?@Constants.VersionJs"></script>
    }
}


